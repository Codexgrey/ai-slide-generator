// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id            String         @id @default(uuid())
  email         String         @unique
  password      String
  name          String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  presentations Presentation[]
  sessions      Session[]
  accounts      Account[]
  passwordResetTokens PasswordResetToken[]
}


model PasswordResetToken {
  token      String   @id
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  expiresAt  DateTime
}


model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  user         User     @relation(fields: [userId], references: [id])
  expires      DateTime
}


model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String  // google, facebook, apple
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}


model Presentation {
  id            String   @id @default(uuid())
  title         String
  description   String?
  themeId       String 
  userId        String
  user          User     @relation(fields: [userId], references: [id])
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  slides        Slide[]
}


model Slide {
  id             String       @id @default(cuid())
  title          String
  content        String[] // bullet points
  imageUrl       String?
  notes          String?
  order          Int
  presentation   Presentation @relation(fields: [presentationId], references: [id], onDelete: Cascade)
  presentationId String
}
