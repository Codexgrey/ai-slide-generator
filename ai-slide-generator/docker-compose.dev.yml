# docker-compose.dev.yml

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    env_file:
      - .env
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_started

  database:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=ai_slides_dev
      - POSTGRES_USER=dev_user
      - POSTGRES_PASSWORD=dev_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev_user"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  studio:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: ["npx", "prisma", "studio"]
    depends_on:
      database:
        condition: service_healthy
    environment:
      - NODE_ENV=development
    env_file:
      - .env
    ports:
      - "5555:5555"
    volumes:
      - .:/app
      - /app/node_modules

volumes:
  postgres_data:
  redis_data:
